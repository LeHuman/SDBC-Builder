NAME "Hawkrod"
VERSION 1.0.0

CONF
    ANALOG_RES  : 12
    VIRT_ID_OFF : 128

NODE FRONT_ECU : The front teensy
    GPIO ONBOARD_LED : 13 DIGITAL OUTPUT    : onboard led
    GPIO ANALOG_TEST : 24 ANALOG OUTPUT     : analog out
    GPIO BUTTON_OFF : 2 DIGITAL INPUT       : Digital Start Button
    GPIO WHEEL_1 : 21 ANALOG INPUT          : R wheel speed
    GPIO WHEEL_0 : 20 ANALOG INPUT          : L wheel speed
    VIRT CHARGE_SIGNAL : DIGITAL OUTPUT     : Indicates whether charging should be enabled
    VIRT START_LED : DIGITAL OUTPUT         : Whether the front start led should be on

    # All Can messages can be read/written to by other nodes
    MSG 8 >> MSGBLK_FRONT_LED : Control msg for front led
        SIG ONBOARD_LED : "int" >> ONBOARD_LED : ctrl for the led gpio
        SIG OTHER_CTRL_SIG : "short" : ctrl int
    
    MSG 5 << MSGBLK_FRONT_DEBUG : Some Debug block
        SIG DEBUG_INTEGER : "int" : Debug int
    MSG 2 << MSGBLK_FRONT_WHEEL_SPEED : Wheel message block 0
        SIG WHEEL_SPEED_FRONT_LEFT : "f_rpm" << WHEEL_0 : The speed of the front left wheel
        SIG WHEEL_SPEED_FRONT_RIGHT : "f_rpm" << WHEEL_1 : The speed of the front right wheel

NODE BACK_ECU : The back teensy
    GPIO ONBOARD_LED : 13 DIGITAL OUTPUT    : onboard led
    GPIO SERVO_OFF : 0 DIGITAL OUTPUT       : Turn the back servos off
    GPIO TSV_SIGNAL : 3 DIGITAL INPUT      : digital input
    GPIO WHEEL_1 : 21 ANALOG INPUT          : R wheel speed
    GPIO WHEEL_0 : 20 ANALOG INPUT          : L wheel speed
    GPIO AIR2 : 4 DIGITAL OUTPUT            : Air 2 control
    VIRT STATE : ANALOG OUTPUT               : Current state of the ECU

    LINK << FRONT_ECU MSGBLK_FRONT_LED : Push to front led
        SET ONBOARD_LED << STATE
        SET OTHER_CTRL_SIG << WHEEL_1
    
    LINK >> FRONT_ECU MSGBLK_FRONT_DEBUG : set led to debug
        SET DEBUG_INTEGER >> ONBOARD_LED

    MSG 3 << MSGBLK_BACK_WHEEL_SPEED : Wheel message block 1
        SIG WHEEL_SPEED_BACK_LEFT : "b_rpm" << WHEEL_0 : The speed of the back left wheel
        SIG WHEEL_SPEED_BACK_RIGHT : "b_rpm" << WHEEL_1 : The speed of the back right wheel

    MSG 10 >> MSGBLK_BACK_LED : Control msg for back led
        SIG ONBOARD_LED : "int" >> ONBOARD_LED : ctrl for the led gpio

NODE MC0
    ADDR 0xA3 - 0xC0
    MSG 0xC0 >> CTRL_BLK : Control msg for MC
        SIG TORQUE : "int" : torque value
        SIG ENABLE : "bool" : enable bit
    MSG 0xA0 MC0_FAULTS
        SIG FAULT_GEN_0 : "flag" 
        SIG FAULT_GEN_1 : "flag" 
        SIG FAULT_GEN_2 : "flag" 
        SIG FAULT_GEN_3 : "flag" 
        SIG FAULT_GEN_4 : "flag" 
        SIG FAULT_GEN_5 : "flag" 
        SIG FAULT_GEN_6 : "flag" 
        SIG FAULT_GEN_7 : "flag" 
        SIG FAULT_GEN_8 : "flag" 
        SIG FAULT_GEN_9 : "flag" 
        SIG FAULT_GEN_10 : "flag" 
        SIG FAULT_GEN_11 : "flag" 
        SIG FAULT_GEN_12 : "flag" 
        SIG FAULT_GEN_13 : "flag" 
        SIG FAULT_GEN_14 : "flag" 
        SIG FAULT_GEN_15 : "flag" 
        SIG FAULT_GEN_16 : "flag" 
        SIG FAULT_GEN_17 : "flag" 
        SIG FAULT_GEN_18 : "flag" 
        SIG FAULT_GEN_19 : "flag" 
        SIG FAULT_GEN_20 : "flag" 
        SIG FAULT_GEN_21 : "flag" 
        SIG FAULT_GEN_22 : "flag" 
        SIG FAULT_GEN_23 : "flag" 
        SIG FAULT_GEN_24 : "flag" 
        SIG FAULT_GEN_25 : "flag" 
        SIG FAULT_GEN_26 : "flag" 
        SIG FAULT_GEN_27 : "flag" 
        SIG FAULT_GEN_28 : "flag" 
        SIG FAULT_GEN_29 : "flag" 
        SIG FAULT_GEN_30 : "flag" 
        SIG FAULT_GEN_31 : "flag" 
        SIG FAULT_GEN_32 : "flag" 
        SIG FAULT_GEN_33 : "flag" 
        SIG FAULT_GEN_34 : "flag" 
        SIG FAULT_GEN_35 : "flag" 
        SIG FAULT_GEN_36 : "flag" 
        SIG FAULT_GEN_37 : "flag" 
        SIG FAULT_GEN_38 : "flag" 
        SIG FAULT_GEN_39 : "flag" 
        SIG FAULT_GEN_40 : "flag" 
        SIG FAULT_GEN_41 : "flag" 
        SIG FAULT_GEN_42 : "flag" 
        SIG FAULT_GEN_43 : "flag" 
        SIG FAULT_GEN_44 : "flag" 
        SIG FAULT_GEN_45 : "flag" 
        SIG FAULT_GEN_46 : "flag" 
        SIG FAULT_GEN_47 : "flag" 
        SIG FAULT_GEN_48 : "flag" 
        SIG FAULT_GEN_49 : "flag" 
        SIG FAULT_GEN_50 : "flag" 
        SIG FAULT_GEN_51 : "flag" 
        SIG FAULT_GEN_52 : "flag" 
        SIG FAULT_GEN_53 : "flag" 
        SIG FAULT_GEN_54 : "flag" 
        SIG FAULT_GEN_55 : "flag" 
        SIG FAULT_GEN_56 : "flag" 
        SIG FAULT_GEN_57 : "flag" 
        SIG FAULT_GEN_58 : "flag" 
        SIG FAULT_GEN_59 : "flag" 
        SIG FAULT_GEN_60 : "flag" 
        SIG FAULT_GEN_61 : "flag" 
        SIG FAULT_GEN_62 : "flag" 
        SIG FAULT_GEN_63 : "flag" 

NODE MC1
NODE AMS

FORMAT "f_rpm"  "int"   (1,0) [-20,60] : Rotations per minute
FORMAT "b_rpm"  "int"   (1,0) [-20,60] : Rotations per minute
FORMAT "%"      "uint"   (1,0) [0,0]    : Percentage
FORMAT "C"      "float"  (1,0) [0,0]    : Celsius
FORMAT "F"      "float"  (1,0) [0,0]    : Fahrenheit
FORMAT "m/s"    "int"    (1,0) [0,0]    : Meters per second
FORMAT "deg/s"  "float"  (1,0) [0,0]    : Degrees per second
FORMAT "deg"    "float"  (1,0) [0,0]    : Angle in degrees
FORMAT "flag"   "bool"   (1,0) [0,0]    : True or False flag
FORMAT "bin"    "binary" (1,0) [0,0]    : Binary data

TYPE "long"   - 64 INTEGER
TYPE "int"    - 32 INTEGER
TYPE "short"  - 16 INTEGER
TYPE "byte"   - 8  INTEGER
TYPE "ulong"  + 64 INTEGER
TYPE "uint"   + 32 INTEGER
TYPE "ushort" + 16 INTEGER
TYPE "ubyte"  + 8  INTEGER
TYPE "float"  - 32 FLOATING
TYPE "double" - 64 FLOATING
TYPE "bool"   + 1  INTEGER  : Potential to cluster into bit fields?
TYPE "binary" + 32 INTEGER  : Special cases, such as with multi message values